<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>us.researchdata.java</groupId>
    <artifactId>biocompace-request</artifactId>
    <packaging>war</packaging>
    <name>BioCompACE Request</name>
    <version>5.2.0</version>
    <description>BioCompACE Request Workflow</description>
    <url>https://github.com/ekoranda/biocompace-request</url>
    <organization>
        <name>Research Data and Communication Technologies</name>
        <url>http://researchdata.us</url>
    </organization>
    <inceptionYear>2019</inceptionYear>
    <developers>
        <developer>
            <id>ekoranda</id>
            <name>Emily Koranda</name>
            <email>ekoranda@researchdata.us</email>
            <url>http://researchdata.us</url>
            <organization>Research Data and Communication Technologies</organization>
            <organizationUrl>http://researchdata.us</organizationUrl>
            <roles>
                <role>developer</role>
                <role>testing</role>
            </roles>
            <timezone>2</timezone>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/ekoranda/biocompace-request.git</connection>
        <developerConnection>scm:git:https://github.com/ekoranda/biocompace-request.git</developerConnection>
        <url>https://github.com/ekoranda/biocompace-request/</url>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/ekoranda/biocompace-request/issues</url>
    </issueManagement>

    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.imixs.workflow.version>5.2.1</org.imixs.workflow.version>
		<custom.webResources>src/main/webapp</custom.webResources>
		<custom.unpackTypes>war</custom.unpackTypes>
	</properties>


    <repositories>
		<!-- Sonatype Snapshot repository -->
		<repository>
			<id>sonatype-snaptshots</id>
			<name>Sonatype Snapshot repository</name>
			<url>http://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>
	</repositories>
	
	
	<profiles>

		<profile>
			<id>docker-build</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>

									<target>
										<exec executable="docker">
											<arg value="build" />
											<arg value="-t" />
											<arg value="imixs/imixs-jsf-example" />
											<arg value="./" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>


		<profile>
			<id>docker-build-payara</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>

									<target>
										<exec executable="docker">
											<arg value="build" />
											<arg value="-f" />
											<arg value="Dockerfile-Payara" />
											<arg value="-t" />
											<arg value="imixs/imixs-jsf-example" />
											<arg value="./" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>



		<profile>
			<id>docker-build-openliberty</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>

									<target>
										<exec executable="docker">
											<arg value="build" />
											<arg value="-f" />
											<arg value="Dockerfile-OpenLiberty" />
											<arg value="-t" />
											<arg value="imixs/imixs-jsf-example" />
											<arg value="./" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>



		<profile>
			<id>docker-build-tomee</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>

									<target>
										<exec executable="docker">
											<arg value="build"/>
											<arg value="-f" />
											<arg value="Dockerfile-TomEE" />
											<arg value="-t" />
											<arg value="imixs/imixs-jsf-example" />
											<arg value="./" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>


	</profiles>



	<build>
		<resources>
			<!-- enable resource filtering for multi language version -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<webResources>
						<resource>
							<filtering>true</filtering>
							<!-- this is relative to the pom.xml directory -->
							<directory>${custom.webResources}</directory>
							<includes>
								<include>**/WEB-INF/*</include>
								<include>/src/main/resources/*</include>
								<!-- include any other file types you want to filter -->
							</includes>
						</resource>
					</webResources>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>


			<!-- relase management -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
			</plugin>

		</plugins>
		
		<finalName>biocompace</finalName>
	</build>

    <dependencies>
   
    
  <dependency>
    <groupId>org.ldaptive</groupId>
    <artifactId>ldaptive</artifactId>
    <version>2.0.0-RC5</version>
  </dependency>
  
  <dependency>
    <groupId>org.primefaces</groupId>
    <artifactId>primefaces</artifactId>
    <version>7.0</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.richfaces.core/richfaces-core-api -->
<dependency>
    <groupId>org.richfaces.core</groupId>
    <artifactId>richfaces-core-api</artifactId>
    <version>4.3.7.Final</version>
</dependency>
  
  <!-- JEE Dependencies -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>8.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Imixs Workflow -->

		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-engine</artifactId>
			<version>${org.imixs.workflow.version}</version>
		</dependency>

		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-jax-rs</artifactId>
			<version>${org.imixs.workflow.version}</version>
		</dependency>

		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-faces</artifactId>
			<version>${org.imixs.workflow.version}</version>
		</dependency>

		<!-- Apache Lucene Core -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-index-lucene</artifactId>
			<version>${org.imixs.workflow.version}</version>
		</dependency>
		
		
		<!-- Apache Lucene Solr 
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-index-solr</artifactId>
			<version>${org.imixs.workflow.version}</version>
		</dependency>
		-->

    </dependencies>
</project>
